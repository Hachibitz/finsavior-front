{"ast":null,"code":"import { Component, Host, Input } from '@angular/core';\nimport { ProgressDirective } from './progress.directive';\n// todo: number pipe\n// todo: use query from progress?\nexport var BarComponent = function () {\n  function BarComponent(progress) {\n    this.percent = 0;\n    this.progress = progress;\n  }\n  Object.defineProperty(BarComponent.prototype, \"value\", {\n    /** current value of progress bar */\n    get: function () {\n      return this._value;\n    },\n    set: function (v) {\n      if (!v && v !== 0) {\n        return;\n      }\n      this._value = v;\n      this.recalculatePercentage();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BarComponent.prototype.ngOnInit = function () {\n    this.progress.addBar(this);\n  };\n  BarComponent.prototype.ngOnDestroy = function () {\n    this.progress.removeBar(this);\n  };\n  BarComponent.prototype.recalculatePercentage = function () {\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\n    var totalPercentage = this.progress.bars.reduce(function (total, bar) {\n      return total + bar.percent;\n    }, 0);\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  };\n  BarComponent.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'bar',\n      template: \"\\n  <div class=\\\"progress-bar\\\"\\n    style=\\\"min-width: 0;\\\"\\n    role=\\\"progressbar\\\"\\n    [ngClass]=\\\"type && 'progress-bar-' + type\\\"\\n    [ngStyle]=\\\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\\\"\\n    aria-valuemin=\\\"0\\\"\\n    [attr.aria-valuenow]=\\\"value\\\"\\n    [attr.aria-valuetext]=\\\"percent.toFixed(0) + '%'\\\"\\n    [attr.aria-valuemax]=\\\"max\\\"><ng-content></ng-content></div>\\n\"\n    }]\n  }];\n  /** @nocollapse */\n  BarComponent.ctorParameters = function () {\n    return [{\n      type: ProgressDirective,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  };\n  BarComponent.propDecorators = {\n    'type': [{\n      type: Input\n    }],\n    'value': [{\n      type: Input\n    }]\n  };\n  return BarComponent;\n}();\n//# sourceMappingURL=bar.component.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}