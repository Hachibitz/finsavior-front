{"ast":null,"code":"import { Component, EventEmitter, Input, Output, ViewChild, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\nimport { DatepickerConfig } from './datepicker.config';\nexport var DATEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DatePickerComponent;\n  }),\n  multi: true\n};\n/* tslint:disable:component-selector-name component-selector-type */\n/* tslint:enable:component-selector-name component-selector-type */\nexport var DatePickerComponent = function () {\n  function DatePickerComponent(config) {\n    /** sets datepicker mode, supports: `day`, `month`, `year` */\n    this.datepickerMode = 'day';\n    /** if false week numbers will be hidden */\n    this.showWeeks = true;\n    this.selectionDone = new EventEmitter(undefined);\n    /** callback to invoke when the activeDate is changed. */\n    this.activeDateChange = new EventEmitter(undefined);\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this._now = new Date();\n    this.config = config;\n    this.configureOptions();\n  }\n  Object.defineProperty(DatePickerComponent.prototype, \"activeDate\", {\n    /** currently active date */\n    get: function () {\n      return this._activeDate || this._now;\n    },\n    set: function (value) {\n      this._activeDate = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DatePickerComponent.prototype.configureOptions = function () {\n    Object.assign(this, this.config);\n  };\n  DatePickerComponent.prototype.onUpdate = function (event) {\n    this.activeDate = event;\n    this.onChange(event);\n  };\n  DatePickerComponent.prototype.onSelectionDone = function (event) {\n    this.selectionDone.emit(event);\n  };\n  DatePickerComponent.prototype.onActiveDateChange = function (event) {\n    this.activeDateChange.emit(event);\n  };\n  // todo: support null value\n  DatePickerComponent.prototype.writeValue = function (value) {\n    if (this._datePicker.compare(value, this._activeDate) === 0) {\n      return;\n    }\n    if (value && value instanceof Date) {\n      this.activeDate = value;\n      this._datePicker.select(value, false);\n      return;\n    }\n    this.activeDate = value ? new Date(value) : void 0;\n  };\n  DatePickerComponent.prototype.registerOnChange = function (fn) {\n    this.onChange = fn;\n  };\n  DatePickerComponent.prototype.registerOnTouched = function (fn) {\n    this.onTouched = fn;\n  };\n  DatePickerComponent.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'datepicker',\n      template: \"\\n    <datepicker-inner [activeDate]=\\\"activeDate\\\"\\n                      (update)=\\\"onUpdate($event)\\\"\\n                      [datepickerMode]=\\\"datepickerMode\\\"\\n                      [initDate]=\\\"initDate\\\"\\n                      [minDate]=\\\"minDate\\\"\\n                      [maxDate]=\\\"maxDate\\\"\\n                      [minMode]=\\\"minMode\\\"\\n                      [maxMode]=\\\"maxMode\\\"\\n                      [showWeeks]=\\\"showWeeks\\\"\\n                      [formatDay]=\\\"formatDay\\\"\\n                      [formatMonth]=\\\"formatMonth\\\"\\n                      [formatYear]=\\\"formatYear\\\"\\n                      [formatDayHeader]=\\\"formatDayHeader\\\"\\n                      [formatDayTitle]=\\\"formatDayTitle\\\"\\n                      [formatMonthTitle]=\\\"formatMonthTitle\\\"\\n                      [startingDay]=\\\"startingDay\\\"\\n                      [yearRange]=\\\"yearRange\\\"\\n                      [customClass]=\\\"customClass\\\"\\n                      [dateDisabled]=\\\"dateDisabled\\\"\\n                      [onlyCurrentMonth]=\\\"onlyCurrentMonth\\\"\\n                      [shortcutPropagation]=\\\"shortcutPropagation\\\"\\n                      [monthColLimit]=\\\"monthColLimit\\\"\\n                      [yearColLimit]=\\\"yearColLimit\\\"\\n                      (selectionDone)=\\\"onSelectionDone($event)\\\"\\n                      (activeDateChange)=\\\"onActiveDateChange($event)\\\">\\n      <daypicker tabindex=\\\"0\\\"></daypicker>\\n      <monthpicker tabindex=\\\"0\\\"></monthpicker>\\n      <yearpicker tabindex=\\\"0\\\"></yearpicker>\\n    </datepicker-inner>\\n    \",\n      providers: [DATEPICKER_CONTROL_VALUE_ACCESSOR]\n    }]\n  }];\n  /** @nocollapse */\n  DatePickerComponent.ctorParameters = function () {\n    return [{\n      type: DatepickerConfig\n    }];\n  };\n  DatePickerComponent.propDecorators = {\n    'datepickerMode': [{\n      type: Input\n    }],\n    'initDate': [{\n      type: Input\n    }],\n    'minDate': [{\n      type: Input\n    }],\n    'maxDate': [{\n      type: Input\n    }],\n    'minMode': [{\n      type: Input\n    }],\n    'maxMode': [{\n      type: Input\n    }],\n    'showWeeks': [{\n      type: Input\n    }],\n    'formatDay': [{\n      type: Input\n    }],\n    'formatMonth': [{\n      type: Input\n    }],\n    'formatYear': [{\n      type: Input\n    }],\n    'formatDayHeader': [{\n      type: Input\n    }],\n    'formatDayTitle': [{\n      type: Input\n    }],\n    'formatMonthTitle': [{\n      type: Input\n    }],\n    'startingDay': [{\n      type: Input\n    }],\n    'yearRange': [{\n      type: Input\n    }],\n    'onlyCurrentMonth': [{\n      type: Input\n    }],\n    'shortcutPropagation': [{\n      type: Input\n    }],\n    'monthColLimit': [{\n      type: Input\n    }],\n    'yearColLimit': [{\n      type: Input\n    }],\n    'customClass': [{\n      type: Input\n    }],\n    'dateDisabled': [{\n      type: Input\n    }],\n    'activeDate': [{\n      type: Input\n    }],\n    'selectionDone': [{\n      type: Output\n    }],\n    'activeDateChange': [{\n      type: Output\n    }],\n    '_datePicker': [{\n      type: ViewChild,\n      args: [DatePickerInnerComponent]\n    }]\n  };\n  return DatePickerComponent;\n}();\n//# sourceMappingURL=datepicker.component.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}