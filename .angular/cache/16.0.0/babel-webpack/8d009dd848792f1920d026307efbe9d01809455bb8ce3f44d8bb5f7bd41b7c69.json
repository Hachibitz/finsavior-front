{"ast":null,"code":"import { Injectable, NgZone, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\nexport var ComponentLoaderFactory = function () {\n  function ComponentLoaderFactory(componentFactoryResolver, ngZone, injector, posService) {\n    this._ngZone = ngZone;\n    this._injector = injector;\n    this._posService = posService;\n    this._componentFactoryResolver = componentFactoryResolver;\n  }\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  ComponentLoaderFactory.prototype.createLoader = function (_elementRef, _viewContainerRef, _renderer) {\n    return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._posService);\n  };\n  ComponentLoaderFactory.decorators = [{\n    type: Injectable\n  }];\n  /** @nocollapse */\n  ComponentLoaderFactory.ctorParameters = function () {\n    return [{\n      type: ComponentFactoryResolver\n    }, {\n      type: NgZone\n    }, {\n      type: Injector\n    }, {\n      type: PositioningService\n    }];\n  };\n  return ComponentLoaderFactory;\n}();\n//# sourceMappingURL=component-loader.factory.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}