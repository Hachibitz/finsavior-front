{"ast":null,"code":"import { Directive, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\nexport var TabDirective = function () {\n  function TabDirective(tabset) {\n    /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n    this.select = new EventEmitter();\n    /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n    this.deselect = new EventEmitter();\n    /** fired before tab will be removed */\n    this.removed = new EventEmitter();\n    this.addClass = true;\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n  Object.defineProperty(TabDirective.prototype, \"active\", {\n    /** tab active state toggle */\n    get: function () {\n      return this._active;\n    },\n    set: function (active) {\n      var _this = this;\n      if (this.disabled && active || !active) {\n        if (!active) {\n          this._active = active;\n        }\n        this.deselect.emit(this);\n        return;\n      }\n      this._active = active;\n      this.select.emit(this);\n      this.tabset.tabs.forEach(function (tab) {\n        if (tab !== _this) {\n          tab.active = false;\n        }\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TabDirective.prototype.ngOnInit = function () {\n    this.removable = this.removable;\n  };\n  TabDirective.decorators = [{\n    type: Directive,\n    args: [{\n      selector: 'tab, [tab]'\n    }]\n  }];\n  /** @nocollapse */\n  TabDirective.ctorParameters = function () {\n    return [{\n      type: TabsetComponent\n    }];\n  };\n  TabDirective.propDecorators = {\n    'heading': [{\n      type: Input\n    }],\n    'disabled': [{\n      type: Input\n    }],\n    'removable': [{\n      type: Input\n    }],\n    'customClass': [{\n      type: Input\n    }],\n    'active': [{\n      type: HostBinding,\n      args: ['class.active']\n    }, {\n      type: Input\n    }],\n    'select': [{\n      type: Output\n    }],\n    'deselect': [{\n      type: Output\n    }],\n    'removed': [{\n      type: Output\n    }],\n    'addClass': [{\n      type: HostBinding,\n      args: ['class.tab-pane']\n    }]\n  };\n  return TabDirective;\n}();\n//# sourceMappingURL=tab.directive.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}