{"ast":null,"code":"import { Component, HostBinding, Input } from '@angular/core';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\nexport var TabsetComponent = function () {\n  function TabsetComponent(config) {\n    this.clazz = true;\n    this.tabs = [];\n    this.classMap = {};\n    Object.assign(this, config);\n  }\n  Object.defineProperty(TabsetComponent.prototype, \"vertical\", {\n    /** if true tabs will be placed vertically */\n    get: function () {\n      return this._vertical;\n    },\n    set: function (value) {\n      this._vertical = value;\n      this.setClassMap();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TabsetComponent.prototype, \"justified\", {\n    /** if true tabs fill the container and have a consistent width */\n    get: function () {\n      return this._justified;\n    },\n    set: function (value) {\n      this._justified = value;\n      this.setClassMap();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TabsetComponent.prototype, \"type\", {\n    /** navigation context class: 'tabs' or 'pills' */\n    get: function () {\n      return this._type;\n    },\n    set: function (value) {\n      this._type = value;\n      this.setClassMap();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TabsetComponent.prototype.ngOnDestroy = function () {\n    this.isDestroyed = true;\n  };\n  TabsetComponent.prototype.addTab = function (tab) {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && tab.active !== false;\n  };\n  TabsetComponent.prototype.removeTab = function (tab) {\n    var index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && this.hasAvailableTabs(index)) {\n      var newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    tab.removed.emit(tab);\n    this.tabs.splice(index, 1);\n  };\n  TabsetComponent.prototype.getClosestTabIndex = function (index) {\n    var tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n    for (var step = 1; step <= tabsLength; step += 1) {\n      var prevIndex = index - step;\n      var nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  };\n  TabsetComponent.prototype.hasAvailableTabs = function (index) {\n    var tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n    for (var i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n    return false;\n  };\n  TabsetComponent.prototype.setClassMap = function () {\n    this.classMap = (_a = {\n      'nav-stacked': this.vertical,\n      'nav-justified': this.justified\n    }, _a[\"nav-\" + this.type] = true, _a);\n    var _a;\n  };\n  TabsetComponent.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'tabset',\n      template: \"\\n    <ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\" (click)=\\\"$event.preventDefault()\\\">\\n        <li *ngFor=\\\"let tabz of tabs\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n          [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\">\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\"\\n            [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n            (click)=\\\"tabz.active = true\\\">\\n            <span [ngTransclude]=\\\"tabz.headingRef\\\">{{tabz.heading}}</span>\\n            <span *ngIf=\\\"tabz.removable\\\">\\n              <span (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\n            </span>\\n          </a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n    }]\n  }];\n  /** @nocollapse */\n  TabsetComponent.ctorParameters = function () {\n    return [{\n      type: TabsetConfig\n    }];\n  };\n  TabsetComponent.propDecorators = {\n    'vertical': [{\n      type: Input\n    }],\n    'justified': [{\n      type: Input\n    }],\n    'type': [{\n      type: Input\n    }],\n    'clazz': [{\n      type: HostBinding,\n      args: ['class.tab-container']\n    }]\n  };\n  return TabsetComponent;\n}();\n//# sourceMappingURL=tabset.component.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}