{"ast":null,"code":"import { Component, HostBinding, Inject, Input } from '@angular/core';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { AccordionComponent } from './accordion.component';\n/*\n * ### Accordion heading\n\n Instead of using `heading` attribute on the `accordion-group`, you can use an `accordion-heading` attribute on `any` element inside of a group that will be used as group's header template.\n\n * */\nexport var AccordionPanelComponent = function () {\n  function AccordionPanelComponent(accordion) {\n    this.accordion = accordion;\n  }\n  Object.defineProperty(AccordionPanelComponent.prototype, \"isOpen\", {\n    // Questionable, maybe .panel-open should be on child div.panel element?\n    /** Is accordion group open or closed */\n    get: function () {\n      return this._isOpen;\n    },\n    set: function (value) {\n      this._isOpen = value;\n      if (value) {\n        this.accordion.closeOtherPanels(this);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AccordionPanelComponent.prototype, \"isBs3\", {\n    get: function () {\n      return isBs3();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AccordionPanelComponent.prototype.ngOnInit = function () {\n    this.panelClass = this.panelClass || 'panel-default';\n    this.accordion.addGroup(this);\n  };\n  AccordionPanelComponent.prototype.ngOnDestroy = function () {\n    this.accordion.removeGroup(this);\n  };\n  AccordionPanelComponent.prototype.toggleOpen = function (event) {\n    if (!this.isDisabled) {\n      this.isOpen = !this.isOpen;\n    }\n  };\n  AccordionPanelComponent.decorators = [{\n    type: Component,\n    args: [{\n      selector: 'accordion-group, accordion-panel',\n      template: \"\\n<div class=\\\"panel card\\\" [ngClass]=\\\"panelClass\\\">\\n  <div class=\\\"panel-heading card-header\\\" role=\\\"tab\\\" (click)=\\\"toggleOpen($event)\\\">\\n    <div class=\\\"panel-title card-title\\\">\\n      <div role=\\\"button\\\" class=\\\"accordion-toggle\\\" [attr.aria-expanded]=\\\"isOpen\\\">\\n        <div *ngIf=\\\"heading\\\"[ngClass]=\\\"{'text-muted': isDisabled}\\\">{{heading}}</div>\\n        <ng-content select=\\\"[accordion-heading]\\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" [collapse]=\\\"!isOpen\\\">\\n    <div class=\\\"panel-body card-block\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n  \"\n    }]\n  }];\n  /** @nocollapse */\n  AccordionPanelComponent.ctorParameters = function () {\n    return [{\n      type: AccordionComponent,\n      decorators: [{\n        type: Inject,\n        args: [AccordionComponent]\n      }]\n    }];\n  };\n  AccordionPanelComponent.propDecorators = {\n    'heading': [{\n      type: Input\n    }],\n    'panelClass': [{\n      type: Input\n    }],\n    'isDisabled': [{\n      type: Input\n    }],\n    'isOpen': [{\n      type: HostBinding,\n      args: ['class.panel-open']\n    }, {\n      type: Input\n    }]\n  };\n  return AccordionPanelComponent;\n}();\n//# sourceMappingURL=accordion-group.component.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}